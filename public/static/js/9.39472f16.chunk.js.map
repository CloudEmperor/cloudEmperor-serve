{"version":3,"sources":["env/index.js","env/dev.env.js","api/index.js","env/prod.env.js","service/request.js","assets/images/bg-login.jpg","mock/menuStore.js","pages/login/index.js"],"names":["module","exports","require","BASE_API","ENTERPRISE","PLATFORM","projectName","API","base","env","login","register","new","details","tip","msg","error","toLogin","console","log","axios","create","timeout","defaults","baseURL","headers","post","interceptors","request","use","config","token","localStorage","getItem","Promise","response","res","status","resolve","reject","other","removeItem","setTimeout","errorHandle","data","message","get","url","params","then","catch","err","del","delete","menus","name","icon","path","children","loginBg","openNotification","type","title","description","Login","getMenus","setItem","JSON","stringify","props","setHeaderMenuFn","setSiderMenuFn","firstPath","history","push","handleSubmit","e","preventDefault","form","validateFields","values","userName","getFieldDecorator","this","className","src","style","background","backgroundSize","onSubmit","Item","rules","required","prefix","color","placeholder","onPressEnter","htmlType","React","Component","WrappedLogin","connect","state","dispatch","scope","setHeaderMenu","setSiderMenu","withRouter"],"mappings":"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","file":"static/js/9.39472f16.chunk.js","sourcesContent":["\r\n// eslint-disable-next-line default-case\r\nswitch (process.env.NODE_ENV) {\r\n  case 'development':\r\n    module.exports = require('./dev.env')\r\n    break\r\n  case 'production':\r\n    module.exports = require('./prod.env')\r\n    break\r\n  default:\r\n    module.exports = require('./dev.env')\r\n}\r\n\r\n\r\n","module.exports = {\r\n  BASE_API: 'http://192.168.1.117:3000',\r\n  ENTERPRISE: 'xxx',\r\n  PLATFORM: 'xxx',\r\n  projectName: 'development'\r\n};","/**\r\n * 接口地址\r\n */\r\nimport env from '../env'\r\nconst API = {\r\n  base: env.BASE_API,\r\n  // 业务类\r\n  // 登录页面\r\n  login: {\r\n    login: () => `/admin/admin_login`,\r\n    register: () => `/admin/user_register`\r\n  },\r\n  //新闻相关\r\n  new: {\r\n    details: () => `/news/get`\r\n  }\r\n};\r\n\r\nexport default API;","module.exports = {\r\n  BASE_API: \"http://192.168.1.117:3000\",\r\n  ENTERPRISE: \"xxx\",\r\n  PLATFORM: \"xxx\",\r\n  projectName: \"production\"\r\n};\r\n","/* eslint-disable import/first */\r\nimport axios from 'axios';\r\nconst API = require('../env');\r\nimport { message } from 'antd';\r\n/**\r\n  * 提示函数\r\n  * \r\n  */\r\nconst tip = msg => {\r\n    message.error(msg);\r\n};\r\n\r\n/**\r\n  * 跳转登录页\r\n  * 携带当前页面路由，以期在登录页面完成登录后返回当前页面\r\n  */\r\nconst toLogin = () => {\r\n    console.log('到登录页')\r\n}\r\n\r\n/**\r\n  * 请求失败后的错误统一处理\r\n  * @param {Number} status 请求失败的状态码\r\n  */\r\nconst errorHandle = (status, other) => {\r\n    // 状态码判断\r\n    switch (status) {\r\n        // 401: 未登录状态，跳转登录页\r\n        case 401:\r\n            toLogin();\r\n            break;\r\n        // 403 token过期\r\n        // 清除token并跳转登录页\r\n        case 403:\r\n            tip(\"登录过期，请重新登录\");\r\n            localStorage.removeItem(\"x_token\");\r\n            setTimeout(() => {\r\n                toLogin();\r\n            }, 1000);\r\n            break;\r\n        // 404请求不存在\r\n        case 404:\r\n            tip(\"请求的资源不存在\");\r\n            break;\r\n        //500\r\n        case 500:\r\n            tip(\"服务器异常\");\r\n            break;\r\n        default:\r\n            console.log(other);\r\n    }\r\n}\r\n\r\n// 创建axios实例\r\naxios.create({\r\n    timeout: 5000\r\n});\r\n//配置开发和生产环境baseURL\r\naxios.defaults.baseURL = API.BASE_API;\r\n// 设置post请求头\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n    \"application/x-www-form-urlencoded\";\r\n/**\r\n  * 请求拦截器\r\n  * 每次请求前，如果存在token则在请求头中携带token\r\n  */\r\naxios.interceptors.request.use(\r\n    config => {\r\n        // 登录流程控制中，根据本地是否存在token判断用户的登录情况\r\n        const token = localStorage.getItem(\"x_token\");\r\n        //token && (config.headers.Authorization = token);\r\n        token && (config.headers[\"X-Token\"] = token);\r\n        return config;\r\n    },\r\n    error => Promise.error(error)\r\n);\r\n\r\n// 响应拦截器\r\naxios.interceptors.response.use(\r\n    // 请求成功\r\n    res => (res.status === 200 ? Promise.resolve(res) : Promise.reject(res)),\r\n    // 请求失败\r\n    error => {\r\n        const { response } = error;\r\n        if (response) {\r\n            // 请求已发出，但是不在2xx的范围\r\n            errorHandle(response.status, response.data.message);\r\n            return Promise.reject(response);\r\n        } else {\r\n            // 处理断网的情况\r\n            //toLogin();\r\n        }\r\n    }\r\n);\r\n\r\n/**\r\n * 封装get方法\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\r\n\r\nexport const get = (url, params = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url, {\r\n            params: params\r\n        })\r\n            .then(response => {\r\n                resolve(response.data);\r\n            })\r\n            .catch(err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\n\r\n/**\r\n * 封装post请求\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\r\n\r\nexport const post = (url, data = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(url, data)\r\n            .then(response => {\r\n                resolve(response.data);\r\n            }, err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\n/**\r\n* 封装patch请求\r\n* @param url\r\n* @param data\r\n* @returns {Promise}\r\n*/\r\n\r\nexport const patch = (url, data = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.patch(url, data)\r\n            .then(response => {\r\n                resolve(response);\r\n            }, err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\n/**\r\n* 封装put请求\r\n* @param url\r\n* @param data\r\n* @returns {Promise}\r\n*/\r\n\r\nexport const put = (url, data = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.put(url, data)\r\n            .then(response => {\r\n                resolve(response.data);\r\n            }, err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\n/**\r\n* 封装delete请求\r\n* @param url\r\n* @param data\r\n* @returns {Promise}\r\n*/\r\n\r\nexport const del = (url, params = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.delete(url, {\r\n            params: params\r\n        })\r\n            .then(response => {\r\n                resolve(response.data);\r\n            })\r\n            .catch(err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/bg-login.67ca5133.jpg\";","//header导航菜单\r\nexport const menus= [\r\n    {\r\n        name: '数据看板',\r\n        icon: 'icon-jifen',\r\n        path: '/home',\r\n        children:[]\r\n    },\r\n    {\r\n        name: '新闻政务',\r\n        icon: 'icon-office',\r\n        path: '/news',\r\n        children: []\r\n    },\r\n    {\r\n        name: '用户管理',\r\n        icon: 'icon-supplierfeatures',\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: \"\",\r\n                icon: \"icon-imagetext\",\r\n                name: \"信息维护\",\r\n                children: [\r\n                    {\r\n                        path: \"/userModules/userManagement\",\r\n                        name: \"创建用户\",\r\n                    },\r\n                    {\r\n                        path: \"/news/industryNews\",\r\n                        name: \"角色管理\",\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                path: \"/demo\",\r\n                icon: \"icon-libra\",\r\n                name: \"个人信息\",\r\n                children: []\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name: '系统管理',\r\n        icon: 'icon-set',\r\n        path: '',\r\n        children: [\r\n            {\r\n                path: \"\",\r\n                icon: \"icon-electronics\",\r\n                name: \"系统权限\",\r\n                children: [\r\n                    {\r\n                        path: \"/systemModules/directoryManagement\",\r\n                        name: \"目录管理\",\r\n                    },\r\n                    {\r\n                        path: \"/business/smartCampusfr\",\r\n                        name: \"日志管理\",\r\n                    },\r\n                    {\r\n                        path: \"/business/governmentAffairs\",\r\n                        name: \"字典管理\",\r\n                    }\r\n                ]\r\n            }\r\n           \r\n        ]\r\n    }\r\n]\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable jsx-a11y/alt-text */\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setHeaderMenu, setSiderMenu} from '../../redux/actions/userInfo'\r\nimport './index.less'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Form, Icon, Input, Button, notification} from 'antd'\r\nimport API from '../../api'\r\nimport { post } from '../../service/request'\r\nimport { menus } from '../../mock/menuStore';\r\n\r\nconst loginBg = require('../../assets/images/bg-login.jpg')\r\n\r\nconst mapStateToProps = state => ({\r\n     \r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setHeaderMenuFn: scope => dispatch(setHeaderMenu(scope)),\r\n  setSiderMenuFn: scope => dispatch(setSiderMenu(scope))\r\n})\r\n\r\nconst openNotification = (type, msg, title) => {\r\n    notification[type]({\r\n        message: title || type,\r\n        description: msg\r\n    });\r\n}\r\n\r\nclass Login extends React.Component {\r\n  componentDidMount() {\r\n    localStorage.removeItem(\"userName\");\r\n    localStorage.removeItem(\"modules\");\r\n    localStorage.removeItem(\"activeRouteIndex\")\r\n  }\r\n  \r\n  getMenus= () =>{\r\n    setTimeout(()=>{\r\n      localStorage.setItem('modules', JSON.stringify(menus))\r\n      this.props.setHeaderMenuFn(menus)\r\n      this.props.setSiderMenuFn(menus[0].children)\r\n      let firstPath=''\r\n      if (menus[0].path){\r\n            firstPath = menus[0].path\r\n      }else{\r\n        firstPath = menus[0].children[0].path\r\n      }\r\n      this.props.history.push( firstPath );\r\n    },500)\r\n  }\r\n  \r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.history.push(\"/home\");\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        post(API.login.login(), values)\r\n          .then(res => {\r\n            console.log(res);\r\n            if (res.status === 200) {\r\n              localStorage.setItem(\"userName\", res.data.userName);\r\n              openNotification(\"success\", res.message);\r\n              this.getMenus()      \r\n            } else {\r\n              openNotification(\"error\", res.message);\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className=\"loginBox\" >\r\n        <header className=\"login-header\">\r\n            <img src={require(\"../../assets/images/logo.png\")} />\r\n            <span>CloudEmperor管理系统</span>\r\n        </header>\r\n        <section className=\"login-section\" style={{\r\n            background: `url(${loginBg}) no-repeat center center`,\r\n            backgroundSize:`cover`\r\n           }}>\r\n          <div className=\"login-content\">\r\n            <Form onSubmit={this.handleSubmit} className=\"loginForm\">\r\n              <p className=\"enter-title\">登&nbsp;录</p>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"userName\", {\r\n                  rules: [{ required: true, message: \"请输入账号\" }]\r\n                })(\r\n                  <Input\r\n                    prefix={\r\n                      <Icon\r\n                        type=\"user\"\r\n                        style={{ color: \"rgba(0,0,0,.25)\" }}\r\n                      />\r\n                    }\r\n                    placeholder=\"账号\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"passWord\", {\r\n                  rules: [{ required: true, message: \"请输入密码\" }]\r\n                })(\r\n                  <Input\r\n                    onPressEnter={this.handleSubmit}\r\n                    prefix={\r\n                      <Icon\r\n                        type=\"lock\"\r\n                        style={{ color: \"rgba(0,0,0,.25)\" }}\r\n                      />\r\n                    }\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-form-button\"\r\n                >\r\n                  登&nbsp;&nbsp;&nbsp;&nbsp;录\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </section>\r\n        <footer className=\"login-footer\">\r\n          <p>西安CloudEmperor科技有限公司 ®版权所有 ©2020-2038，保留所有权利。</p>\r\n          <p>CloudEmperor——全面安全，超越所想！</p>\r\n        </footer>\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedLogin = Form.create({ name: 'normal_login' })(Login);\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(WrappedLogin))"],"sourceRoot":""}