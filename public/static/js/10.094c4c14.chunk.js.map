{"version":3,"sources":["env/index.js","env/dev.env.js","api/index.js","env/prod.env.js","service/request.js","pages/userModules/userManagement/index.js","utils/utils.js"],"names":["module","exports","require","BASE_API","ENTERPRISE","PLATFORM","projectName","API","base","env","login","register","new","details","tip","msg","error","toLogin","console","log","axios","create","timeout","defaults","baseURL","headers","post","interceptors","request","use","config","token","localStorage","getItem","Promise","response","res","status","resolve","reject","other","removeItem","setTimeout","errorHandle","data","message","get","url","params","then","catch","err","del","delete","UserManagement","props","initData","postData","page","state","pagination","current","rows","pageSize","catalogId","list","pager","total","setState","tableData","rowEdit","id","history","push","pathname","search","queryString","stringify","type","rowDel","row","deleteId","deleteMsg","title","visible","rowStick","top","uptop","success","warning","handleOk","handleCancel","handleTableChange","filters","sorter","renderActions","record","onClick","className","showQuickJumper","pageSizeOptions","showSizeChanger","columns","width","dataIndex","render","str","index","date","fmt","Date","isNaN","getDate","test","replace","RegExp","$1","getFullYear","substr","length","o","getMonth","getHours","getMinutes","getSeconds","k","formatDate","createDate","this","rowKey","onChange","dataSource","onOk","onCancel","React","Component","withRouter"],"mappings":"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","file":"static/js/10.094c4c14.chunk.js","sourcesContent":["\r\n// eslint-disable-next-line default-case\r\nswitch (process.env.NODE_ENV) {\r\n  case 'development':\r\n    module.exports = require('./dev.env')\r\n    break\r\n  case 'production':\r\n    module.exports = require('./prod.env')\r\n    break\r\n  default:\r\n    module.exports = require('./dev.env')\r\n}\r\n\r\n\r\n","module.exports = {\r\n  BASE_API: 'http://192.168.1.117:3000',\r\n  ENTERPRISE: 'xxx',\r\n  PLATFORM: 'xxx',\r\n  projectName: 'development'\r\n};","/**\r\n * 接口地址\r\n */\r\nimport env from '../env'\r\nconst API = {\r\n  base: env.BASE_API,\r\n  // 业务类\r\n  // 登录页面\r\n  login: {\r\n    login: () => `/admin/admin_login`,\r\n    register: () => `/admin/user_register`\r\n  },\r\n  //新闻相关\r\n  new: {\r\n    details: () => `/news/get`\r\n  }\r\n};\r\n\r\nexport default API;","module.exports = {\r\n  BASE_API: \"http://192.168.1.117:3000\",\r\n  ENTERPRISE: \"xxx\",\r\n  PLATFORM: \"xxx\",\r\n  projectName: \"production\"\r\n};\r\n","/* eslint-disable import/first */\r\nimport axios from 'axios';\r\nconst API = require('../env');\r\nimport { message } from 'antd';\r\n/**\r\n  * 提示函数\r\n  * \r\n  */\r\nconst tip = msg => {\r\n    message.error(msg);\r\n};\r\n\r\n/**\r\n  * 跳转登录页\r\n  * 携带当前页面路由，以期在登录页面完成登录后返回当前页面\r\n  */\r\nconst toLogin = () => {\r\n    console.log('到登录页')\r\n}\r\n\r\n/**\r\n  * 请求失败后的错误统一处理\r\n  * @param {Number} status 请求失败的状态码\r\n  */\r\nconst errorHandle = (status, other) => {\r\n    // 状态码判断\r\n    switch (status) {\r\n        // 401: 未登录状态，跳转登录页\r\n        case 401:\r\n            toLogin();\r\n            break;\r\n        // 403 token过期\r\n        // 清除token并跳转登录页\r\n        case 403:\r\n            tip(\"登录过期，请重新登录\");\r\n            localStorage.removeItem(\"x_token\");\r\n            setTimeout(() => {\r\n                toLogin();\r\n            }, 1000);\r\n            break;\r\n        // 404请求不存在\r\n        case 404:\r\n            tip(\"请求的资源不存在\");\r\n            break;\r\n        //500\r\n        case 500:\r\n            tip(\"服务器异常\");\r\n            break;\r\n        default:\r\n            console.log(other);\r\n    }\r\n}\r\n\r\n// 创建axios实例\r\naxios.create({\r\n    timeout: 5000\r\n});\r\n//配置开发和生产环境baseURL\r\naxios.defaults.baseURL = API.BASE_API;\r\n// 设置post请求头\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n    \"application/x-www-form-urlencoded\";\r\n/**\r\n  * 请求拦截器\r\n  * 每次请求前，如果存在token则在请求头中携带token\r\n  */\r\naxios.interceptors.request.use(\r\n    config => {\r\n        // 登录流程控制中，根据本地是否存在token判断用户的登录情况\r\n        const token = localStorage.getItem(\"x_token\");\r\n        //token && (config.headers.Authorization = token);\r\n        token && (config.headers[\"X-Token\"] = token);\r\n        return config;\r\n    },\r\n    error => Promise.error(error)\r\n);\r\n\r\n// 响应拦截器\r\naxios.interceptors.response.use(\r\n    // 请求成功\r\n    res => (res.status === 200 ? Promise.resolve(res) : Promise.reject(res)),\r\n    // 请求失败\r\n    error => {\r\n        const { response } = error;\r\n        if (response) {\r\n            // 请求已发出，但是不在2xx的范围\r\n            errorHandle(response.status, response.data.message);\r\n            return Promise.reject(response);\r\n        } else {\r\n            // 处理断网的情况\r\n            //toLogin();\r\n        }\r\n    }\r\n);\r\n\r\n/**\r\n * 封装get方法\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\r\n\r\nexport const get = (url, params = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(url, {\r\n            params: params\r\n        })\r\n            .then(response => {\r\n                resolve(response.data);\r\n            })\r\n            .catch(err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\n\r\n/**\r\n * 封装post请求\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\r\n\r\nexport const post = (url, data = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(url, data)\r\n            .then(response => {\r\n                resolve(response.data);\r\n            }, err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\n/**\r\n* 封装patch请求\r\n* @param url\r\n* @param data\r\n* @returns {Promise}\r\n*/\r\n\r\nexport const patch = (url, data = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.patch(url, data)\r\n            .then(response => {\r\n                resolve(response);\r\n            }, err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\n/**\r\n* 封装put请求\r\n* @param url\r\n* @param data\r\n* @returns {Promise}\r\n*/\r\n\r\nexport const put = (url, data = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.put(url, data)\r\n            .then(response => {\r\n                resolve(response.data);\r\n            }, err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\n/**\r\n* 封装delete请求\r\n* @param url\r\n* @param data\r\n* @returns {Promise}\r\n*/\r\n\r\nexport const del = (url, params = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.delete(url, {\r\n            params: params\r\n        })\r\n            .then(response => {\r\n                resolve(response.data);\r\n            })\r\n            .catch(err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\n","import React from 'react'\r\nimport './index.less'\r\nimport { withRouter } from 'react-router-dom';\r\nimport queryString from 'query-string'\r\nimport API from '../../../api'\r\nimport { get, del } from '../../../service/request'\r\nimport { Button, Table, message, Modal } from 'antd'\r\nimport { formatDate } from '../../../utils/utils'\r\n\r\nclass UserManagement extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: false,\r\n            deleteId: '',\r\n            deleteMsg: '',\r\n            pagination: {\r\n                current: 1,\r\n                pageSize: 15,\r\n                showQuickJumper: true,\r\n                pageSizeOptions: ['15', '30', '60', '100'],\r\n                showSizeChanger: true,\r\n                total: 0\r\n            },\r\n            tableData: [],\r\n            columns: [\r\n                {\r\n                    title: '序号',\r\n                    width: 60,\r\n                    dataIndex: 'index',\r\n                    render: (str, record, index) => {\r\n                        return index + 1\r\n                    }\r\n                },\r\n                {\r\n                    title: '姓名',\r\n                    dataIndex: 'title'\r\n                },\r\n                {\r\n                    title: '角色',\r\n                    dataIndex: 'summary'\r\n                },\r\n                {\r\n                    title: '创建者',\r\n                    width: 170,\r\n                    dataIndex: 'createBy'\r\n                },\r\n                {\r\n                    title: '创建时间',\r\n                    width: 170,\r\n                    render: record => {\r\n                        return formatDate(record.createDate, 'yyyy-MM-dd hh:mm')\r\n                    }\r\n                },\r\n                {\r\n                    title: '操作',\r\n                    width: 200,\r\n                    render: record => {\r\n                        return this.renderActions({ record })\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //this.initData()\r\n    }\r\n    initData = () => {\r\n        const postData = {\r\n            page: this.state.pagination.current,\r\n            rows: this.state.pagination.pageSize,\r\n            catalogId: 1\r\n        }\r\n        get(API.new.list(), postData).then(res => {\r\n            if (res.status === 200) {\r\n                const pager = { ...this.state.pagination }\r\n                pager.total = res.data.total\r\n                this.setState({\r\n                    tableData: res.data.list || [],\r\n                    pagination: pager\r\n                })\r\n            } else {\r\n                message.error(res.message)\r\n            }\r\n        })\r\n    }\r\n    rowEdit = id => {\r\n        this.props.history.push({\r\n            pathname: '/editContent',\r\n            search: queryString.stringify({\r\n                type: 'edit',\r\n                id: id\r\n            })\r\n        })\r\n\r\n    }\r\n    rowDel = row => {\r\n        this.setState({\r\n            deleteId: row.id,\r\n            deleteMsg: row.title,\r\n            visible: true\r\n        });\r\n    }\r\n    rowStick = row => {\r\n        if (row.top === 1) {\r\n            message.warning('已置顶，请勿重复操作！');\r\n            return\r\n        }\r\n        get(API.new.uptop(), { id: row.id, top: '1' }).then(res => {\r\n            if (res.status === 200) {\r\n                message.success('置顶成功')\r\n                this.initData()\r\n            } else {\r\n                message.error(res.message)\r\n            }\r\n        })\r\n    }\r\n    handleOk = () => {\r\n        del(API.new.delete(), { id: this.state.deleteId }).then(res => {\r\n            if (res.status === 200) {\r\n                message.success('删除成功')\r\n                this.initData()\r\n            } else {\r\n                message.error(res.message)\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    }\r\n    handleCancel = () => {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    }\r\n    handleTableChange = (pagination, filters, sorter) => {\r\n        const pager = { ...this.state.pagination };\r\n        pager.current = pagination.current;\r\n        pager.pageSize = pagination.pageSize;\r\n        this.setState({\r\n            pagination: pager,\r\n        });\r\n        setTimeout(() => {\r\n            this.initData()\r\n        })\r\n    }\r\n\r\n    renderActions = ({ record }) => {\r\n        return (\r\n            <div>\r\n                <span onClick={() => { this.rowEdit(record.id) }} className=\"text-edit\">修改</span>\r\n                <span onClick={() => { this.rowDel(record) }} className=\"text-del gap\">删除</span>\r\n                <span onClick={() => { this.rowStick(record) }} className=\"text-stick\">{record.top === 1 ? '已置顶' : '置顶'}</span>\r\n            </div>\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"user\">\r\n                <div className=\"user-handle\">\r\n                    <Button type=\"primary\">新增</Button>\r\n                </div>\r\n                <Table\r\n                    columns={this.state.columns}\r\n                    rowKey=\"id\"\r\n                    pagination={this.state.pagination}\r\n                    onChange={this.handleTableChange}\r\n                    dataSource={this.state.tableData} />\r\n                <Modal\r\n                    title=\"友情提示\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <p>{`您确定要删除《${this.state.deleteMsg}》吗？`}</p>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(UserManagement)","export const formatDate = (date, fmt) => {\r\n  date = new Date(date);\r\n  if (isNaN(date.getDate())) return date;\r\n  if (/(y+)/.test(fmt)) {\r\n    fmt = fmt.replace(\r\n      RegExp.$1,\r\n      (date.getFullYear() + \"\").substr(4 - RegExp.$1.length)\r\n    );\r\n  }\r\n  let o = {\r\n    \"M+\": date.getMonth() + 1,\r\n    \"d+\": date.getDate(),\r\n    \"h+\": date.getHours(),\r\n    \"m+\": date.getMinutes(),\r\n    \"s+\": date.getSeconds()\r\n  };\r\n  for (let k in o) {\r\n    if (new RegExp(`(${k})`).test(fmt)) {\r\n      let str = o[k] + \"\";\r\n      fmt = fmt.replace(\r\n        RegExp.$1,\r\n        RegExp.$1.length === 1 ? str : (\"00\" + str).substr(str.length)\r\n      );\r\n    }\r\n  }\r\n  return fmt;\r\n};\r\n"],"sourceRoot":""}